# Nome do Workflow
name: CI com Testes e Comentário de Coverage

# Gatilhos (Triggers)
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Definição dos Jobs
jobs:
  build-test-comment:
    # Ambiente de execução
    runs-on: ubuntu-latest

    # Permissão para a action poder comentar no PR
    permissions:
      pull-requests: write

    # Passos do Job
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Instalar dependências
        run: npm ci

      - name: Rodar testes e gerar dados de coverage
        run: npm run coverage

      - name: Garantir que a pasta de coverage exista
        run: mkdir -p ./coverage

      # 1. Gera o sumário RAW de texto
      - name: Gerar o conteúdo do sumário
        run: npm run coverage:summary > ./coverage/raw-summary.txt

      # 2. Cria o arquivo de comentário formatado em Markdown
      - name: Criar o arquivo de comentário em Markdown
        run: |
          echo "### :white_check_mark: Resumo do Coverage" > ./coverage/coverage-comment.md
          echo "" >> ./coverage/coverage-comment.md
          echo '```' >> ./coverage/coverage-comment.md
          cat ./coverage/raw-summary.txt >> ./coverage/coverage-comment.md
          echo '```' >> ./coverage/coverage-comment.md

      # 3. Publica o comentário no PR usando o arquivo Markdown
      - name: Publicar comentário de coverage no PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          # A mudança crucial: usamos 'path' em vez de 'message'
          path: ./coverage/coverage-comment.md
